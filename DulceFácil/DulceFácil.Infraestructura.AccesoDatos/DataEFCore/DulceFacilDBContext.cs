// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace DulceFácil.Infraestructura.AccesoDatos;

public partial class DulceFacilDBContext : DbContext
{
    public DulceFacilDBContext()
    {
    }

    public DulceFacilDBContext(DbContextOptions<DulceFacilDBContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Clientes> Clientes { get; set; }

    public virtual DbSet<DetallePedido> DetallePedido { get; set; }

    public virtual DbSet<Distribuidores> Distribuidores { get; set; }

    public virtual DbSet<Pedidos> Pedidos { get; set; }

    public virtual DbSet<Productos> Productos { get; set; }

    public virtual DbSet<RutasEntrega> RutasEntrega { get; set; }

    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see https://go.microsoft.com/fwlink/?LinkId=723263.
        => optionsBuilder.UseSqlServer("Data Source=DESKTOP-P9QMUGG;Initial Catalog=DulceFacil;Integrated Security=True");

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Clientes>(entity =>
        {
            entity.HasKey(e => e.idCliente).HasName("PK__Clientes__885457EED3C86342");

            entity.HasIndex(e => e.correo, "UQ__Clientes__2A586E0B70E11340").IsUnique();

            entity.HasIndex(e => e.cedula, "UQ__Clientes__415B7BE58E356A93").IsUnique();

            entity.Property(e => e.cedula)
                .IsRequired()
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.correo)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.nombre)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.telefono)
                .IsRequired()
                .HasMaxLength(20);
        });

        modelBuilder.Entity<DetallePedido>(entity =>
        {
            entity.HasKey(e => new { e.idPedido, e.idProducto }).HasName("PK__DetalleP__998953A432F5CC05");

            entity.Property(e => e.cantidad).HasDefaultValue(1);

            entity.HasOne(d => d.idPedidoNavigation).WithMany(p => p.DetallePedido)
                .HasForeignKey(d => d.idPedido)
                .HasConstraintName("FK__DetallePe__idPed__31EC6D26");

            entity.HasOne(d => d.idProductoNavigation).WithMany(p => p.DetallePedido)
                .HasForeignKey(d => d.idProducto)
                .HasConstraintName("FK__DetallePe__idPro__32E0915F");
        });

        modelBuilder.Entity<Distribuidores>(entity =>
        {
            entity.HasKey(e => e.idDistribuidor).HasName("PK__Distribu__B6A072A3E8E1BE1F");

            entity.Property(e => e.nombre)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.vehiculo).HasMaxLength(50);

            entity.HasOne(d => d.idRutaNavigation).WithMany(p => p.Distribuidores)
                .HasForeignKey(d => d.idRuta)
                .OnDelete(DeleteBehavior.SetNull)
                .HasConstraintName("FK__Distribui__idRut__38996AB5");
        });

        modelBuilder.Entity<Pedidos>(entity =>
        {
            entity.HasKey(e => e.idPedido).HasName("PK__Pedidos__A9F619B7FC0F5114");

            entity.Property(e => e.estadoEntrega)
                .IsRequired()
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.fecha)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");

            entity.HasOne(d => d.idClienteNavigation).WithMany(p => p.Pedidos)
                .HasForeignKey(d => d.idCliente)
                .HasConstraintName("FK__Pedidos__idClien__2A4B4B5E");
        });

        modelBuilder.Entity<Productos>(entity =>
        {
            entity.HasKey(e => e.idProducto).HasName("PK__Producto__07F4A1321D1AD241");

            entity.Property(e => e.nombre)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.precio).HasColumnType("decimal(10, 2)");
        });

        modelBuilder.Entity<RutasEntrega>(entity =>
        {
            entity.HasKey(e => e.idRuta).HasName("PK__RutasEnt__E584E6F47FA15BB2");

            entity.Property(e => e.destino)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.origen)
                .IsRequired()
                .HasMaxLength(100);

            entity.HasOne(d => d.idPedidoNavigation).WithMany(p => p.RutasEntrega)
                .HasForeignKey(d => d.idPedido)
                .HasConstraintName("FK_RutasEntrega_Pedidos");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}